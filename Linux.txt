Linux is a open-source Kernel not an  Operating system, based on Unix.
Kernel is the core part of an OS, managing system resources and communication between hardware and software.
It is known for its security,flexibility,low resource usage
Created by Linus Torvalds in 1991
Linux come from Linus + Unix
Unix is licensed and Linux is Open-Sourced
Kali,Ubuntu are known as Linux distribution (distros)
Bare-Matel installation of linux distro, hypervisor installation of linux distro
virtualization useCase:-
cheap, reduce cost, free , easy backup using snapshot, easy recovery

Introduction to the Linux Filesystem
At its core, the Linux filesystem is a way of organizing data and files on a storage device. Unlike operating systems like Windows, Linux treats everything as a file—whether it's a directory, a hardware device, or even an active process. This unified approach simplifies interactions and makes the system highly flexible.

The Linux filesystem is hierarchical, meaning it has a root directory (/) from which all other files and directories branch out, forming a tree-like structure. This structure is consistent across all Linux distributions, making it easier to navigate and manage multiple systems.


Filesystem Hierarchy Standard (FHS)
The Filesystem Hierarchy Standard (FHS) defines the directory structure and directory contents in Linux systems. Adherence to FHS ensures that software behaves predictably across different Linux distributions.

The root directory (/) serves as the starting point of the filesystem. Key subdirectories include:

/bin: Essential command binaries, like ls, cp, and mv.
/boot: Bootloader files, including the kernel.
/dev: Device files representing hardware components.
/etc: Configuration files for the system.
/home: User home directories.
/lib: Essential shared libraries.
/mnt: Temporary mount points for filesystems.
/opt: Optional software packages.
/proc: Virtual filesystem providing process and kernel information.
/root: Home directory for the root user.
/sbin: System binaries, typically for administrative tasks.
/tmp: Temporary files.
/usr: Secondary hierarchy for user programs and data.
/var: Variable data files like logs, databases, and email.


Key Filesystem Types in Linux
Linux supports various filesystem types, each suited for different use cases. Some of the most common include:

Ext4: The most widely used filesystem in Linux, known for its balance of performance, reliability, and features.
XFS: High-performance filesystem with robust scalability, often used in enterprise environments.
Btrfs: A newer filesystem designed for fault tolerance, repair, and easy administration.
ZFS: Known for data integrity and scalability, commonly used in storage solutions.
vfat: Compatibility layer for FAT filesystems, often used in USB drives and external devices.
NFS: Network File System, used to share files over a network.
Understanding the strengths and weaknesses of each filesystem type is crucial when designing storage solutions for different environments.

Important Directories and Their Purposes
Each directory in the Linux filesystem has a specific role. Here’s a deeper look into some of the most critical directories:

/ (Root Directory): The starting point of the filesystem. All other directories and files branch off from here.
/bin: Contains essential command binaries needed for the system to function in single-user mode. These are available to all users.
/sbin: Similar to /bin, but contains system binaries that are typically used by the root user for administrative tasks.
/lib: Contains shared libraries required by the binaries in /bin and /sbin.
/usr: A secondary hierarchy that contains user programs, libraries, documentation, and more. It’s split into subdirectories like /usr/bin, /usr/sbin, and /usr/lib.
/var: Stores variable data like logs, databases, and spools. This directory often grows in size over time.
/etc: The nerve center for system configuration files. Nearly every service or application has a configuration file located here.
/home: Contains personal directories for each user. This is where users store their personal files and directories.
/proc: A virtual filesystem that provides an interface to kernel data structures. It’s used to access process information, kernel parameters, and more.
/dev: Contains device files that represent hardware components. These files act as interfaces to the corresponding hardware.

File Permissions and Ownership
Linux employs a robust permissions system that controls access to files and directories. Each file has three sets of permissions for the owner, the group, and others:
Read (r): Permission to read the contents of the file.
Write (w): Permission to modify the file.
Execute (x): Permission to execute the file as a program.
Permissions are represented by a combination of letters (r, w, x) or their corresponding octal numbers (4 for read, 2 for write, 1 for execute).

For example, the permission rwxr-xr-- means:
Owner: Read, write, execute
Group: Read, execute
Others: Read only
Understanding and managing permissions is crucial for maintaining system security and ensuring that users have appropriate access levels.


access Linux server/Remote server using Terminal/CMD/GitBash:-
ssh kali@192.168.1.135

Transfer files from PC to Linux server/Remote server:-
using SCP [Secure Copy Protocol]
scp desktop/Linux.txt Linux2.txt kali2@10.2.11.345:/usr/tmp/

Transfer all files of a directory from PC to Linux server/Remote server:-
using SCP [Secure Copy Protocol]
scp * kali2@10.2.11.345:/usr/tmp/

Transfer files from Linux server/Remote server to PC:-
using SCP [Secure Copy Protocol]
scp kali2@10.2.11.345:/usr/tmp/linux.txt desktop/
If using a custom SSH port (e.g., 2222):
scp -P 2222 user@192.168.1.100:/home/user/backup.sql /home/user/

check the current location -> pwd
display the name of current login user -> whoami
find system date & time -> date
display files and folder/directory in current location -> ls / ls -lt / ls -lh / ls -ld / ls -l / ls -a / ls -al
check permission of a file -> ls -ltr
clear the terminal -> ctrl + L / clear
display content of a file on terminal -> cat Linux.txt
search a word in a file -> less Linux.txt -> /gaurav
if there are multiple gaurav details and you want to scroll the press n to quit the file press q
how to create a file -> touch Linux.txt
how to delete a file -> rm Linux.txt
how to edit a file in linux -> mousepad Linux.txt
how to create a folder/directory -> mkdir Linux
delete a directory -> rmdir Linux
how to change directory -> cd kali/Linux/linux.txt
how to go backward -> cd .. cd ../.. cd ../../..
go to the home location/root directory instantaneously -> cd  
copy file and paste from one folder to another -> cp /home/kali/Linux.txt /usr/temp
cut or move file and paste from one folder to another -> mv /home/kali/Linux.txt /usr/temp
copy content of a file in another file -> cp Linux.txt Linux2.txt
rename a file -> mv Linux2.txt RenameLinux.txt
how to read or display top 5 lines from a file -> head -5 Linux.txt
how to read or display bottom 5 lines from a file -> tail -5 Linux.txt
sort the content from a file -> sort Linux.txt
reverse sort the content from a file -> sort -r Linux.txt
display UNIQUE content from a file -> sort Linux.txt | uniq
search a word and display matching content from a file -> grep "gaurav" Linux.txt
search multiple word and siplay content from a file -> egrep "Linux|Linux2|Linux3" Linux.txt
search a file with name start with Linux -> ls Linux*
search a file with extension for a pdf,txt,jpeg -> ls *.pdf
create 10 file -> touch Linux{1..10}.txt
shuffle content of a file in linux -> shuf Linux.txt
count no. of lines in a file -> wc -l Linux.txt
find a file in Linux -> find ./ -name Linux.txt   # this search is case sensitive so check the file name properly
find all pdf_file in Linux -> find ./ -name *.pdf
find a file -> sudo updatedb -> locate Linux.txt
how to check history of previously used commands in past -> history
history | grep sort    / history | grep apt
manual of every command -> man ls
install application on linux -> sudo apt install gnome / dnf / yum
how to list available packages to install on linux -> apt search nuclei
find tool location -> which nuclei
check application is installed or not on linux -> dpkg -l | grep nuclei / rpm -qa | grep nuclei / dnf list installed | grep mysql
calender -> cal
check how long server has been running -> uptime
create a short-cut of a long command -> alias l="ls -ltr"
compress a file -> gzip -k Linux.txt
decompress a file -> gunzip -d Linux.txt.gz
compress a folder/directory -> tar -czf LinuxFolder.tar.gz LinuxFolder/
decompress a folder/directory -> tar -xzf LinuxFolder.tar.gz
how to compress multiple file in one zipped file -> zip Linux.zip cat.txt dog.txt   result -> Linux.zip
how to list files in zipped file -> unzip -l Linux.zip
download file from internet -> wget www.gdrive.com/linux.txt
you can change the name of the package which you want to download -> wget -O BlackHawk www.gdrive.com/linux.txt
how to call an API on linux -> curl http://numbersapi.com/random
start and stop a service on linux -> systemctl status ngnix / systemctl start ngnix / systemctl stop ngnix
how to list all services on linux -> systemctl list-units --type=service -all
list all existing environment variables on linux -> printenv
temporarily add a new environment variables on linux -> export JAVA_HOME="/usr/lib/jvm/java-17" -> export PATH=$JAVA_HOME/bin:$PATH
add a new environment variables permannently on linux -> source ~/.bashrc
print a specific column from a CSV file -> awk -F , '{print $1,$2}' Linux.csv
display starting two characters of all lines -> cut -c1-2 Linux.txt
display a specific line from a file -> sed -n '5p' Linux.txt
convert content of a file from uppercase to lowercase -> tr [:upper:] [:lower:] <Linux.txt 
how to extend or shrink size of a file -> truncate -s 100M Linux.txt
display text in terminal -> echo "Gaurav is learning Linux Commands"
display text in vertical line in terminal -> echo "Gaurav is learning Linux Commands" | fold -w1
how to change user or login as different user in linux -> su kali
how to close or exit as current user -> exit

permissions : u-user g-group o-other a-all
modify permission of a file (give full permission) -> chmod 777 Linux.txt
change ownership of a file -> chown kali Linux.txt
change group ownership of a file -> chgrp kali Linux.txt

free -th      -> check free ram space 
top           -> check %memory and cpu utilization 
df -h         -> disk availability or disk space 
du  / du -h newfolder/ -> check disk utilization or specific folder space utilization 
hostname      -> check hostname of linux server 
lscpu         -> check cpu/core/thread info of your linux server 
arch          -> type of architecture(64 ,x86) of your linux server
lsblk         -> see the list of storage devices and disk partition on your server 
uname -a  /  cat /etc/os-release -> os name of linux server 
ps -ef | grep python             -> check if a process(python) is running or not 
pgrep nginx                      -> how to get PID of a process 
sudo kill -9 8905                -> stop a process by PID(8905) 
sudo pkill nginx                 -> stop a process by name 
jobs                             -> see all the active jobs
bg                               -> resume a job in background
bash Linux.sh                    -> run a bashscript
ifconfig / ifaddr                -> check ip of your machine/server
ping www.google.com              -> check website/server is accessible or not 
telnet 198.168.34.5:22           -> check if a IP:PORT is accessible and open or not 
netsat -putan | grep 80          -> how to check if port is open or not on our server/pc 
traceroute www.google.com        -> how to check all hubs in network path to reach a website 
reboot                           -> restart linux server 
shutdown                         -> shutdown linux server 
useradd Gaurav -> passwd 123456789 -> create a new user on our linux server
sudo userdel gaurav              -> delete a user  
how to schedule a script to run on a particular date/time -> 
mount /dev/sdb1 /mnt             -> Mount Command: Used to attach a filesystem to a specified directory.
umount /mnt                      -> Unmount Command: Used to detach a filesystem from the directory tree.

Log analysis:-
a log file store events, processes, messages, and other data from applications, OS, or devices. 
they provide information based on the actions performed by users, playing an important role in monitoring.
basically used for cyber security, admin roles, troubleshooting roles like shows error code.
location of log file -> cd /var/log -> ls
log file : 
boot [Purpose: Shows messages related to the system startup (booting process)
      Use: Helps identify if all services and hardware components loaded correctly when the system started.
      Example: You can use this to check if a service failed to start at boot.]
cron [Purpose: Useful for tracking if automated tasks (like backups or scripts) ran at the scheduled time.
      Use: Useful for tracking if automated tasks (like backups or scripts) ran at the scheduled time.
      Example: If a backup job fails, check this file to see if it even started.]
secure [Purpose: Logs security-related events like login attempts, sudo usage, and SSH access.
        Use: Helps track unauthorized access or failed login attempts.
        Example: Repeated failed logins from an unknown IP may signal a brute-force attack.]
maillog [Purpose: Logs activities of the mail server (like sendmail or postfix).
         Use: Used to troubleshoot email sending and receiving issues.
         Example: If users don’t receive emails, this log helps find the cause.]
httpd [Purpose: Contains logs for the Apache HTTP server (httpd).
       Use: Tracks web server access, errors, and other Apache-related activities.
       Example: Use this to see if a website is being accessed or if it’s throwing errors.]
messages [Purpose: A general-purpose system log file that stores messages from many system services.
          Use: Useful for catching miscellaneous system issues.
          Example: Hardware errors, kernel messages, or driver problems often show up here.]




Syslog:-
Syslog (System Logging Protocol) is a standard protocol for computer logging that allows devices and applications to send log messages to a central location for analysis and monitoring. It's widely used in Unix-like systems and networking devices to track system events, errors, and performance. Syslog facilitates centralized log management and provides insights into system health and security. 
Main Purpose of syslog
To record important events happening inside the system—such as logins, errors, warnings, boot info, and service activity—so that system administrators can monitor and troubleshoot issues.

Use Cases of syslog
Detect unauthorized access attempts
Monitor system health
Debug errors in applications
Track cron job execution
Review system reboots or shutdowns

The log file is usually located at:
/var/log/syslog
On Red Hat-based systems (RHEL, CentOS, Fedora), you may not see /var/log/syslog; instead, logs go to:
/var/log/messages
/var/log/secure

What Information Does syslog Contain?
It collects logs from:
The kernel
System services (e.g., cron, sshd)
Startup scripts
Network issues
Hardware events
Applications that use the syslog facility

How syslog Works (Behind the Scenes)
Services or applications generate messages.
These messages are passed to the syslog daemon (e.g., rsyslog, syslog-ng, or journald).
The daemon sorts the messages based on:
Facility: The type of program (auth, mail, daemon, etc.)
Severity Level: From debug to emergency
The messages are then saved to a log file, sent to a remote server, or displayed on-screen.

Severity Levels in syslog
From most critical to least:
0 - Emergency (System unusable)
1 - Alert
2 - Critical
3 - Error
4 - Warning
5 - Notice
6 - Informational
7 - Debug

Example of a syslog Entry
May 22 10:15:00 kali sshd[1024]: Accepted password for user from 192.168.1.10 port 45678 ssh2
Explanation:
Date and time: May 22 10:15:00
Hostname: kali
Service: sshd
Message: User logged in using password from IP 192.168.1.10

How to View syslog
cat /var/log/syslog → View entire file
less /var/log/syslog → Scroll through it
tail -f /var/log/syslog → See real-time logs



Audit Log:-
An audit log is a record of actions performed on a system, showing who did what, when, and how. It helps in tracking security-relevant events such as user logins, file changes, command executions, and permission modifications.

Main Purpose of Audit Logs
Monitor user and system activity
Detect suspicious or unauthorized actions
Comply with security standards (like PCI-DSS, HIPAA)
Help in digital forensics and investigations

Linux uses the Audit daemon (auditd) to maintain audit logs.
Log file location: /var/log/audit/audit.log

What Does an Audit Log Contain?
Each entry usually shows:
Time and date
User ID (UID)
Command or action
File or object accessed
Result (success or failed)
Source IP or terminal

Example of an Audit Log Entry
type=SYSCALL msg=audit(1716358455.123:421): user pid=1092 uid=1000 auid=1000 cmd="/bin/cat /etc/passwd"
Meaning:
A user with UID 1000 ran the cat command on /etc/passwd.
It happened at a specific time and was recorded by the audit system.

How to Set Up Audit Logs in Linux
Install audit daemon (if not already):
sudo apt install auditd  # Debian/Ubuntu
sudo yum install audit   # RHEL/CentOS

Start and enable the service:
sudo systemctl start auditd
sudo systemctl enable auditd

Add audit rules:
Example – log access to /etc/passwd:

sudo auditctl -w /etc/passwd -p rwxa -k passwd-watch
-w: Watch file
-p: Permissions (read, write, execute, attribute change)
-k: Add a tag for easy search


What is Journal in Linux?
The journal in Linux refers to the system log managed by systemd-journald, the logging service of the systemd system manager.
The Linux journal is a modern logging system that provides centralized, searchable, structured, and optionally persistent logs using the systemd-journald service.
It collects and stores log messages from:
The Linux kernel
System services (like SSH, NetworkManager)
User processes and applications

Why Journal Exists
Before systemd, Linux used text log files in /var/log/. Now, with systemd-journald, logs are stored in a binary format for better performance and features.

Main Features of the Journal
Feature	                  Description
📦 Centralized	            Stores logs from kernel, services, and apps in one place
🔍 Searchable	            Use journalctl to filter by time, service, user, severity
🕓 Persistent (optional)	Keeps logs after reboot if enabled
🔒 Secure	                  Supports access control per user
📄 Structured	            Includes metadata like PID, UID, system boot ID, etc.

Where Logs Are Stored
Temporary logs (cleared on reboot):
/run/log/journal/
Persistent logs (kept after reboot):
/var/log/journal/ (create this folder if it doesn't exist)

View Logs with journalctl
Command	                        Description
journalctl	                        View all logs
journalctl -b	                  Logs from current boot
journalctl -f	                  Live view (like tail -f)
journalctl -u sshd	            Logs from SSH service
journalctl --since "1 hour ago"	Logs from the last hour
journalctl -n >> /root/Desktop/log.txt   Shows the last 10 log entries from the system journal. Use -n 50 for 50 lines, etc. & Appends the output to a file
journalctl -p err                        View logs by priority (errors only)
journalctl -p warning                    shows warning logs
journalctl --since "2025-05-20"          View logs for a specific date
journalctl -f                            View real-time log updates (like tail -f)

Enable Persistent Journaling
sudo mkdir -p /var/log/journal
sudo systemctl restart systemd-journald





